version: '3'
services:
  prometheus:
    image: prom/prometheus
    #build:
    #  context: .
    #  dockerfile: Dockerfile
    container_name: prometheus
    restart: always
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.route-prefix=/
      - --storage.tsdb.retention.time=200h
      - --web.enable-lifecycle
    ports:
      - 9090:9090

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    restart: always
    volumes:
      - ./prometheus/:/etc/alertmanager/
    command:
      - '-config.file=/etc/alertmanager/alertmanager.yml'
      - '-storage.path=/alertmanager'
    ports:
      - 9093:9093

  node-exporter:
    image: prom/node-exporter
    container_name: node_exporter
    restart: always
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter
    container_name: nginx-exporter
    restart: always
    ports:
      - 9113:9113
    entrypoint:
      - /usr/bin/exporter
      - -nginx.scrape-uri
      - http://64.227.125.65/metrics
      - -nginx.retries=10
      - -web.telemetry-path=/metrics

  cadvisor:
    image: google/cadvisor
    container_name: cadvisor
    privileged:
      true
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - 3000:3000
    restart: always
    links:
      - prometheus

volumes:
  grafana-data:
