server {
    listen      80;
    server_name monitoring.example.com;

    location / {
        return 301 https://$server_name$request_uri;
   }
}

server {
        listen 443 ssl http2;
        server_name monitoring.example.com;

        # Letsencrypt cetificates
        # https://certbot.eff.org/
        ssl_certificate           /etc/letsencrypt/live/monitoring.example.com/cert.pem;
        ssl_certificate_key       /etc/letsencrypt/live/monitoring.example.com/privkey.pem;

        # SSL Configurations
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;
        ssl_session_tickets off;

        # Generate dhparam
        # mkdir /etc/nginx/ssl/
        # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /etc/nginx/ssl/dhparam.pem"
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        # intermediate configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # HSTS (ngx_http_headers_module is required) (63072000 seconds)
        add_header Strict-Transport-Security "max-age=63072000" always;

        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;

        # Logs
        access_log  /var/log/nginx/monitoring_access.log combined;
        error_log   /var/log/nginx/monitoring_error.log error;

        client_max_body_size 10M;

        # Proxy settings
        proxy_max_temp_file_size    0;
        proxy_connect_timeout      900;
        proxy_send_timeout         900;
        proxy_read_timeout         900;
        proxy_buffer_size          4k;
        proxy_buffers              4 32k;
        proxy_busy_buffers_size    64k;
        proxy_temp_file_write_size 64k;
        proxy_intercept_errors     on;

        location / {
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass http://localhost:3000;
        }

}
